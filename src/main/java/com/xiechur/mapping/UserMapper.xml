<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiechur.dao.UserDao">
   <!-- 先定义一个Interface，UserMapper，然后Mapper文件的namespace指向的就是这个Interface， UserInterface里定义的方法和UserMapper.xml文件中的一样,
    然后代码里直接使用接口 -->
    <resultMap type="User" id="UserResult">
        <result property="id" column="id" />
        <result property="userName" column="userName" />
        <result property="password" column="password" />
    </resultMap>

    <!-- 所谓的动态SQL语句 -->
    <select id="login" parameterType="User" resultMap="UserResult">
        select * from user where userName = #{userName} and password = #{password}
    </select>

    <!-- 用户查询 -->
    <select id="find" parameterType="Map" resultMap="UserResult">
        select * from user
        <where>
            <if test="userName!=null and userName!='' ">
                and userName like #{userName}
            </if>
        </where>
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>
    <select id="getTotal" parameterType="Map" resultType="Long">
        select count(*) from user
        <where>
            <if test="userName!=null and userName!='' ">
                and userName like #{userName}
            </if>
        </where>
    </select>

    <!-- 用户添加 -->
    <insert id="add" parameterType="User">
        insert into user(username,password) values(#{userName},#{password})
    </insert>

    <!-- 用户修改 -->
    <update id="update" parameterType="User">
        update user
        <set>
            <if test="userName != null and userName != '' ">userName = #{userName},</if>
            <if test="password != null and password != '' ">password = #{password},</if>
        </set>
        where id = #{id}
    </update>
    <!-- 用户删除 -->
    <delete id="delete" parameterType="Integer">
        delete from user where id = #{id}
    </delete>
</mapper>